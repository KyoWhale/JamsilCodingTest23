'''
문제
정수 4를 1, 2, 3의 합으로 나타내는 방법은 총 7가지가 있다. 합을 나타낼 때는 수를 1개 이상 사용해야 한다.

1+1+1+1
1+1+2
1+2+1
2+1+1
2+2
1+3
3+1
정수 n이 주어졌을 때, n을 1, 2, 3의 합으로 나타내는 방법의 수를 구하는 프로그램을 작성하시오.

입력
첫째 줄에 테스트 케이스의 개수 T가 주어진다. 각 테스트 케이스는 한 줄로 이루어져 있고, 정수 n이 주어진다. n은 양수이며 11보다 작다.

출력
각 테스트 케이스마다, n을 1, 2, 3의 합으로 나타내는 방법의 수를 출력한다.
'''

# 1 : 1
# 2 : 1+1  2 -> 2 모두 1인 경우 : 1 + 1 (%2 == 0) =2
# 3 : 1+2 2+1 3+0 -> (뒤에 숫자 보기) : 2 + 1 + 1(3으로 표현 가능) =4
# 4 : 1+3 2+2 3+1 -> 4 + 2 + 1 = 7
# 5 : 1+4 2+3 3+2 4+1 -> 7 + 4 + 2  = 13
# 6 : 1+5 2+4 3+3 4+2 5+1 -> 13 + 7 + 4 = 24
# 7 : 1+6 2+4 3+4 4+3 -> 44    
'''
1 + 
1+4 2+3 3+2 4+1
1+1+3 1+2+2 1+3+1 2+1+2 2+2+1 2+3+0 3+1+1 3+2 4+1

2+ 
1+3 2+2 3+1
1+1+2 1+2+1 1+3 2+1+1 2+2 3+1
'''
## method
def sol(num):
    dp = [1 if i in (0,1) else 0 for i in range(num+1)]

    for idx in range(2, num+1):
        diff = 1
        while diff <= 3 and num - diff >= 0 :
            dp[idx] += dp[idx-diff]
            diff += 1
    
    return dp[num]


## input
n = int(input())
## output
for _ in range(n):
    print(sol(int(input())))
